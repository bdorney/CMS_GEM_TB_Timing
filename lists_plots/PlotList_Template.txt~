# I. DOCUMENTATION
# ====================================
# The program expects a certain "nested-header" style.
# The format should look something like:
#
#
# 	[BEGIN_SELECTION]
#	...
#	...
#		[BEGIN_CANVAS]
#		...
#		...
#			[BEGIN_PLOT]
#			...
#			...
#			[END_PLOT]
#		[END_CANVAS]
#		[BEGIN_CANVAS]
#		...
#		...
#			[BEGIN_PLOT]
#			...
#			...
#			[END_PLOT]
#		[END_CANVAS]
#	[END_SELECTION]
#
#
# The program makes use of the TTree::Draw() method in ROOT to create plots for a given string selection
# For each selection any number of TCanvas objects can be defined.  For each canvas defined any number
# of TGraphErrors can be defined.  The "global" selection defined under the "[BEGIN_SELECTION]" header
# will be applied to ever plot.  Within each "[BEGIN_PLOT]" a local selection can be defined and the 
# program will apply the logical AND of the global and local selections.  This allows the user to have 
# the opportunity to develop complex selection cases.
#
# For each of higher level header sections (i.e. "[BEGING_SELECTION]" and "[BEGIN_CANVAS]") the header
# parameters should *always* be placed before the declaration of any canvases or plots.  Placing top 
# level header parameters after the declaration of the first canvas/plot could lead to undefined behavior
# or crashes.
#
# Parameters are expected to be entered in the following format:
#
#	field_name = 'value';
#
# The field_name should be on the left followed by an equals sign "=" then the value should be enclosed in 
# single quote marks "'".  A semicolon ";" ends the statement.  Tabs "\t" and spaces outside of the single 
# quotes will be ignored, but will be preserved inside.  Text after the ";" will be ignored. The template
# below shows an example.
#
# The program understands the "#" character to indicate a comment so it is possible to comment out lines
# in the PlotList file you create for ease of use.
#
#
# 	I.A. HEADER PARAMETERS - SELECTION
#	====================================
#	The following parameters are supported:
#		<FIELD>			<DATA TYPE, DESCRIPTION>
#		
#		clone_prev		boolean, clones a previous selection and duplicates all previous canvases/plots
#					declared.  Can be used to easily extend an analysis to a new "selection"
#
#		identifier 		string, sets up file structure for different selections. Appended to the 
#					TName of all root objects in a seletion.  Expected to be unique.
#
#		selection		string, determines the global selection, used in the TTree::Draw() method.
#					The selection here is a series of logical operations on the TBranch names
#					specified here.  The user should become familiar with TTree::Draw().
#					The logical AND between this selection and the selection defined under a 
#					[BEGIN_PLOT] header are used to make a plot
#
#
# 	I.B. HEADER PARAMETERS - CANVAS
#	====================================
#	The following parameters are supported:
#		<FIELD>			<DATA TYPE, DESCRIPTION>
#
#		grid_x			boolean, determines if x-grid lines are drawn on the TCanvas or not
#
#		grid_y			boolean, determines if y-grid lines are drawn on the TCanvas or not
#
#		height			int, height of the TCanvas in pixels
#
#		latex_line		string, a TLatex object will be drawn on the canvas at the NDC position defined by 
#					(latex_line_ndcpos_x, latex_line_ndcpos_y).  It is expected that the fields:
#					latex_line, latex_line_ndcpos_x, latex_line_ndcpos_y appear as a triplet one after the 
#					other (see example below).  These fields may be entered multiple times.  A new TLatex
#					object will be drawn for each occurence of these three parameters.  Failure to specify
#					the (latex_line_ndcpos_x, latex_line_ndcpos_y) will cause the program to algorithmically
#					assign these coordinate positions.
#
#		latex_line_ndcpos_x	float, defines the x NDC position for a latex_line.  If this is not specified it will be
#					algorithmically assigned.
#
#		latex_line_ndcpos_y	float, defines the y NDC position for a latex_line.  If this is not specified it will be
#					algorithmically assigned.
#
#		leg_ndcpos_x1		float, defines the starting x NDC position of the TLegend.  If this is not specified a
#					default value will be assigned
#
#		leg_ndcpos_x2		float, defines the ending x NDC position of the TLegend.  If this is not specified a
#					default value will be assigned
#
#		leg_ndcpos_y1		float, defines the starting y NDC position of the TLegend.  If this is not specified a
#					default value will be assigned
#
#		leg_ndcpos_y2		float, defines the ending y NDC position of the TLegend.  If this is not specified a
#					default value will be assigned
#
#		log_x			boolean, determines if the x-axis is drawn as logarithmic or not
#
#		log_y			boolean, determines if the y-axis is drawn as logarithmic or not
#
#		name			string, this is assigned as the TName of the created TCanvas, the selection identifier
#					will be appended to this name
#
#		title			string, the title of the TCanvas
#
#		width			int, width of the TCanvas in pixels
#
#
# 	I.B. HEADER PARAMETERS - PLOT
#	====================================
#	The following parameters are supported:
#		<FIELD>			<DATA TYPE, DESCRIPTION>
#
#		color			string, color assigned to the plot (points & lines).  The standard ROOT color enum 
#					definitions can be used, e.g. the set {kWhite, kBlack, kGray, ... , kViolet, etc...}
#					is understood by the program.  Mathematical operations on these defintions, e.g.
#					"kRed + 4" is also understood.  Finally a raw numeric value can be given and this
#					will be converted to a color (e.g. "423").
#
#		fit_formula		string, to be added in the future
#
#		leg_entry		string, this is the legend entry for this plot
#
#		name			string, this is assigned as the TName of the created TGraphErrors, the selection identifier
#					will be appended to this name
#
#		name_root_file		string, this is the physical name, including filepath if desired, of the ROOT file which
#					contains the TTree object to be analyzed
#
#		name_tree		string, this is the TName of the TTree found in the ROOT file specified in "name_root_file"
#
#		option_draw		string, this is the draw option for this plot.  In the case of multiple plots being defined
#					for a single canvas the second and subsequent plots will have the "same" option 
#					algorithmically added to the draw option; e.g. there is no need to specify "same."
#					The list of supported draw options are given by ROOT, see for example the THistPainter class.
#					
#		option_fit		string, to be added in the future
#
#		point_labels		string, the program can draw labels next to the data points of the plot created; this 
#					parameter is the name of a TBranch in your TTree file. The program will then draw the
#					"TBranch_Name = TBranch_Value" which corresponds to the data point.  The orientation
#					of the point_label is determined algorithmically once "point_labels_angle" is specified.
#					The user must also specify the data format of the TBranch so that a proper conversion
#					to string is performed.  Supported data types are shown below in "point_labels_type."
#
#		point_labels_angle	float, angle at which point labels are drawn next to the data point.
#
#		point_labels_type	string, data type of the TBranch defined by "point_labels."  Supported input is from
#					the set {int, float, string}.
#
#		selection		string, determines the local selection, used in the TTree::Draw() method.
#					The selection here is a series of logical operations on the TBranch names
#					specified here.  The user should become familiar with TTree::Draw().
#					The logical AND between this selection and the selection defined under a 
#					[BEGIN_SELECTION] header are used to make a plot.
#
#		size_line		float, thickness of the plot's line
#
#		size_marker		float, size of the plot's marker
#
#		style_line		int, line style to be used by ROOT when drawing this plot
#
#		style_marker		int, marker style to be used by ROOT when drawing this plot
#
#		var_indep		string, name of the TBranch that will be your independent variable (i.e. x-axis)
#
#		var_indep_err		string, name of the TBranch that will be the error on your independent variable (i.e. x-axis
#					error bars.
#
#		var_dep			string, name of the TBranch that will be your dependent variable (i.e. y-axis)
#
#		var_dep_assoc		string, this optional parameter is the only parameter the expects an explicity format of
#					the input TTree passed to the class.  The base class treeAnalyzer does not make use of
#					this field; only the inherited class treeAnalyzerTDC uses this parameter.  For the timing
#					histogram stored in treeAnalyzerTDC this parameter is the name of the TBranch that 
#					corresponds to a TF1 used to fit the experimental data.  Specifying this parameter will
#					also store, for each data point, a copy of the timing histogram with the fit overlaid; a
#					data over fit ratio is also made.
#
#		var_dep_err		string, name of the TBranch that will be the error on your dependent variable (i.e. y-axis
#					error bars.
#
#		x_range_min		float, minimum value of the x-axis for this plot.  Note if this is outside the range 
#					of the TGraphError's points there will be no impact.
#
#		x_range_max		float, maximum value of the x-axis for this plot.  Note if this is outside the range
#					of the TGraphError's points there will be no impact.
#
#		x_title			string, title of the x-axis
#
#		y_range_min		float, minimum value of the y-axis for this plot.
#
#		y_range_max		float, maximum value of the y-axis for this plot.
#
#		y_title			string, title of the y-axis
#
#
# In the case of an unrecognized field name (i.e. due to a typo) the program will output an error message
# to the user stating the field name that is not understood.  Then the program will skip this entry.
# This could lead to undefined behavior and may in most cases require you to re-run your analysis.
#
#
# II. TEMPLATE 
# ====================================

[BEGIN_SELECTION]
	clone_prev = 'false';
	identifier = 'template_selection_1';
	selection = 'TBranch_Name_1 > numeric_value_1 && TBranch_Name_2 != 0';
	[BEGIN_CANVAS]
 		#grid_x = 'false';
		#grid_y = 'true';
		height = '700';
		latex_line = 'GLOBAL_SELECTION'; #this will draw the selection string above
		latex_line_ndcpos_x = '0.5';
		latex_line_ndcpos_y = '0.3';
		#latex_line = 'CMS Preliminary';
		#latex_line_ndcpos_x = '0.1';
		#latex_line_ndcpos_y = '0.907';
		latex_line = 'CMS Cordinates are #left(#rho,#eta,#phi#right) and p_{T}'; #Here the "#" character is NOT a comment
		latex_line_ndcpos_x = '0.3';
		latex_line_ndcpos_y = '0.5';
		leg_ndcpos_x1 = '0.2';
		leg_ndcpos_x2 = '0.4';
		leg_ndcpos_y1 = '0.2';
		leg_ndcpos_y2 = '0.4';
		#log_x = 'false';
		#log_y = 'false';
		name = 'canvas_1';
		title = 'canvas_1';
		width = '700';
		[BEGIN_PLOT]
			color = 'kRed';
			#fit_formula = '';	#placeholder, no support yet
			leg_entry = 'Plot No. 1';
			name = 'plot_1';
			name_root_file = 'home/myRootFile.root';
			name_tree = 'myTTree';
			option_draw = 'APL';	#This is the first plot, so we have the "A" option present
			#option_fit = '';	#placeholder, no support yet
			point_labels = 'TBranch_Name_1';
			point_labels_angle = '45';
			point_labels_type = 'int';
			selection = 'numeric_value_2 < TBranch_Name_3 && TBranch_Name_3 < numeric_value_3 ';
			size_line = '3';
			size_marker = '0.9';
			style_line = '4';
			style_marker = '21';
			var_indep = 'TBranch_Name_4';
			var_indep_err = 'TBranch_Name_5';
			var_dep = 'TBranch_Name_6';
			#var_dep_assoc = 'TBranch_Name_7';
			var_dep_err = 'TBranch_Name_8';
			x_range_min = '5';
			x_range_max = '10';
			x_title = 'The X-axis label';
			y_range_min = '10';
			y_range_max = '15';
			y_title = 'The Y-axis label';
		[END_PLOT]
		[BEGIN_PLOT]
			color = 'kBlack+2';
			#fit_formula = '';	#placeholder, no support yet
			leg_entry = 'Plot No. 2';
			name = 'plot_2';
			name_root_file = 'home/myRootFile.root';
			name_tree = 'myTTree';
			option_draw = 'PL';	#This is the second plot, so we have dropped the "A" option
			#option_fit = '';	#placeholder, no support yet
			point_labels = 'TBranch_Name_1';
			point_labels_angle = '45';
			point_labels_type = 'int';
			selection = 'numeric_value_4 < TBranch_Name_3 && TBranch_Name_3 < numeric_value_5 ';
			size_line = '3';
			size_marker = '0.9';
			style_line = '4';
			style_marker = '21';
			var_indep = 'TBranch_Name_4';
			var_indep_err = 'TBranch_Name_5';
			var_dep = 'TBranch_Name_6';
			#var_dep_assoc = 'TBranch_Name_7';
			var_dep_err = 'TBranch_Name_8';
			x_range_min = '5';
			x_range_max = '10';
			x_title = 'The X-axis label';
			y_range_min = '10';
			y_range_max = '15';
			y_title = 'The Y-axis label';
		[END_PLOT]
	[END_CANVAS]
	[BEGIN_CANVAS]
		#grid_x = 'false';
		#grid_y = 'true';
		height = '700';
		latex_line = 'GLOBAL_SELECTION'; #this will draw the selection string above
		latex_line_ndcpos_x = '0.5';
		latex_line_ndcpos_y = '0.3';
		#latex_line = 'CMS Preliminary';
		#latex_line_ndcpos_x = '0.1';
		#latex_line_ndcpos_y = '0.907';
		latex_line = 'CMS Cordinates are #left(#rho,#eta,#phi#right) and p_{T}'; #Here the "#" character is NOT a comment
		latex_line_ndcpos_x = '0.3';
		latex_line_ndcpos_y = '0.5';
		leg_ndcpos_x1 = '0.2';
		leg_ndcpos_x2 = '0.4';
		leg_ndcpos_y1 = '0.2';
		leg_ndcpos_y2 = '0.4';
		#log_x = 'false';
		#log_y = 'false';
		name = 'canvas_2';
		title = 'canvas_2';
		width = '700';
		[BEGIN_PLOT]
			color = 'kRed';
			#fit_formula = '';	#placeholder, no support yet
			leg_entry = 'Plot No. 1 on this canvas, but plot 3 in total';
			name = 'plot_3';
			name_root_file = 'home/myRootFile.root';
			name_tree = 'myTTree';
			option_draw = 'APL';	#This is the first plot, so we have the "A" option present
			#option_fit = '';	#placeholder, no support yet
			point_labels = 'TBranch_Name_1';
			point_labels_angle = '45';
			point_labels_type = 'int';
			selection = 'numeric_value_2 < TBranch_Name_3 && TBranch_Name_3 < numeric_value_3 ';
			size_line = '3';
			size_marker = '0.9';
			style_line = '4';
			style_marker = '21';
			var_indep = 'TBranch_Name_4';
			var_indep_err = 'TBranch_Name_5';
			var_dep = 'TBranch_Name_6';
			#var_dep_assoc = 'TBranch_Name_7';
			var_dep_err = 'TBranch_Name_8';
			x_range_min = '5';
			x_range_max = '10';
			x_title = 'The X-axis label';
			y_range_min = '10';
			y_range_max = '15';
			y_title = 'The Y-axis label';
		[END_PLOT]
	[END_CANVAS]
[END_SELECTION]
[BEGIN_SELECTION]
	clone_prev = 'true';
	identifier = 'template_selection_2';
	selection = 'TBranch_Name_2 != -1';	#new selection, but above is repeated automatically
[END_SELECTION]


# III. TROUBLESHOOTING
# ====================================
# Error message like:
#
#	Error in <TTreeFormula::Compile>:  Invalid Syntax "&&"
#
# 		Most likely your "selection" field in the selection header 
# 		is empty and you have applied a local selection. The program interupts 
# 		this as ' && <local selection>' which causes a syntax error (b/c you are 
# 		taking the AND of a null expression with a non-null expression).
#
#
#
# Q: One of my plots is not present on the TCanvas?
#
#	1) Check the "option_draw" to see if you are not re-drawing an axis (option "A") that causes a previous plot to be hidden.
#	2) Check the x_range_min, x_range_max, y_range_min, y_range_max of all the plots drawn for this canvas.  The program will
#		take the largest constructable range the ranges of all defined plots for the canvas.  Your plot might be outside
#		this window.
#	3) Try changing the order in which you define the "option_draw" there is a known bug in which the order of the plots are
#		drawn does not match the order in which they are defined.  This causes a plot to go missing.  Kudo's if you can
#		fix this bug, we will update the repository.
